openapi: 3.0.0
info:
  description: |
    This is a sample Note for Cellphone REST API server
  version: "1.0.0"
  title: Notes
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: alvarofblanco@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "http://localhost:3000/api"
tags:
  - name: notes
    description: Everything about the Notes
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: "http://swagger.io"
paths:
  /auth/login:
    post:
      tags:
        - user
      summary: Authenticates the user with a JWT
      operationId: authUser
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/loginResponse"

        "400":
          description: Invalid Input
        "401":
          description: Unauthorized
      requestBody:
        $ref: "#/components/requestBodies/User"
  /auth/signup:
    post:
      tags:
        - user
      summary: Creates a new User
      operationId: addUser
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignUpResponse"
        "400":
          description: Missing username or password - The username already exists
      requestBody:
        $ref: "#/components/requestBodies/User"

  /notes:
    get:
      security:
        - bearerAuth: []
      tags:
        - notes
      summary: Get All notes from user
      operationId: getAllNotes
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotesArray"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
    post:
      security:
        - bearerAuth: []
      tags:
        - notes
      summary: Add a nnew note to the app
      operationId: addNote
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  description: Body of the note
                  type: string
                title:
                  description: Title of the note
                  type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleNote"

externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      xml:
        name: User
    loginResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
    SignUpResponse:
      type: object
      properties:
        message:
          type: string
        data:
          $ref: "#/components/schemas/UserData"
    UserData:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
    SingleNote:
      type: object
      properties:
        message:
          type: string
          example: Note OK
        data:
          $ref: "#/components/schemas/Note"
    NotesArray:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/Note"

    Note:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAT:
          type: string
          format: date-time
        active:
          type: boolean
        userId:
          type: string
        title:
          type: string
        body:
          type: string
  requestBodies:
    User:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, for documentation purposes only
